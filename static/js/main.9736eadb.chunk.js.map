{"version":3,"sources":["pages/CategoryPage/CategoryPage.tsx","features/favouriteSlice.ts","features/withdrawSlice.ts","app/store.ts","app/hooks.ts","components/Header/Header.tsx","components/Footer/Footer.tsx","utils/api.ts","components/Item/Item.tsx","components/Path/path.tsx","pages/Favourites/Favourites.tsx","pages/Withdraw/Withdraw.tsx","components/ItemCarousel/ItemCarousel.tsx","pages/ItemPage/ItemPage.tsx","components/Category/Category.tsx","components/HotPrice/HotPrice.tsx","components/NewModels/NewModels.tsx","components/Carousel/Carousel.tsx","img/Banner.png","components/Novelties/Novelties.tsx","pages/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["SortTypes","favouriteLocalStorageKey","getFavouritesFromLocalStorage","key","item","localStorage","getItem","JSON","parse","initialState","favorites","favouriteSlice","createSlice","name","reducers","addFavourite","state","action","itemId","push","forEach","id","setItem","stringify","writeFavouritesToLocalStorage","payload","removeFavourite","filter","deleteFavouritesFromLocalStorage","actions","withdrawLocalStorageKey","getWithdrawFromLocalStorage","saveWithdrawToLocalStorage","withdraw","withdrawSlice","addWithdraw","Object","prototype","hasOwnProperty","call","amount","encreaseAmount","decreaseAmount","deleteWithdraw","store","configureStore","reducer","favorite","favouriteReducer","withdrawReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Header","favoritesSize","length","withdrawSize","useMemo","counter","keys","e","className","to","isActive","classNames","Footer","type","onClick","window","scrollTo","top","behavior","BASE_URL","mainLink","getPhones","fetch","then","responce","ok","Error","json","Item","favourites","dispatch","isWithdraw","includes","isFavorite","buttonHandle","place","src","imageUrl","alt","discount","Math","ceil","price","screen","capacity","ram","aria-label","Path","pathElems","pathBoldElems","prepPathElems","map","elem","toUpperCase","slice","prepPathBoldElems","index","arr","Fragment","path__bold","Favourites","useState","favItems","setFavItems","title","paths","location","hash","useEffect","phones","currPhone","find","phone","curr","Withdraw","withdraws","totalPrice","values","reduce","prev","amountActionHandle","ItemCarousel","items","currPage","setCurrPage","pageAmount","actionHandler","mode","disabled","style","transform","colors","ItemPage","currPhoneAllSpecs","setCurrPhoneAllSpecs","setCurrPhone","currColor","setCurrColor","currCapacity","setCurrCapacity","prevVal","currVal","activeImgId","setActiveImgId","similarPhones","setSimilarPhones","pathParts","split","phoneId","images","img","clickOnImgHandle","onMouseEnter","onMouseEnterHandle","onMouseLeave","color","backgroundColor","changeColorHandle","value","changeCapacityHandle","display","screenSize","screenResolution","hardware","cpu","storage","description","camera","primary","connectivity","cell","android","os","amountOnPageValues","CategoryPage","category","setAmount","amountOnPage","setAmountOnPage","setPageAmount","Newest","sortType","setSortType","separatedByCategory","newItems","Number","isNaN","preparedItems","sort","a","b","Low","High","age","changePagehandle","defaultValue","onChange","event","newSortType","target","newAmount","Array","fill","_","Category","HotPrice","products","hotPhones","phone1","phone2","NewModels","newPhones","Carousel","imgs","containerRef","useRef","intervalRef","current","setCurrent","translateX","setTranslateX","slides","desc","useCallback","transitionDuration","clientWidth","transitionEnd","document","addEventListener","removeEventListener","useLayoutEffect","clearInterval","setInterval","ref","random","Novelties","carouselImg","HomePage","App","setProducts","path","element","replace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9736eadb.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { Phone } from '../../types/Phone';\nimport { Item } from '../../components/Item';\nimport { Path } from '../../components/Path';\nimport './CategoryPage.scss';\n\n// eslint-disable-next-line no-shadow\nenum SortTypes {\n  Newest,\n  Low,\n  High,\n}\n\ntype Props = {\n  items: Phone[],\n  category: string,\n};\n\nconst amountOnPageValues = [5, 10, 16, 20, 'all'];\n\nexport const CategoryPage: React.FC<Props> = ({ items, category }) => {\n  const [amount, setAmount] = useState(0);\n  const [amountOnPage, setAmountOnPage] = useState(amountOnPageValues[0]);\n  const [pageAmount, setPageAmount] = useState(0);\n  const [sortType, setSortType] = useState(SortTypes.Newest);\n  const [currPage, setCurrPage] = useState(1);\n\n  const separatedByCategory = useMemo(() => {\n    const newItems = items.filter(item => item.type === category);\n\n    setAmount(newItems.length);\n\n    return newItems;\n  }, [items, category]);\n\n  useEffect(() => {\n    setAmountOnPage(amountOnPageValues[0]);\n    setPageAmount(\n      !Number.isNaN(+amountOnPage)\n        ? Math.ceil(amount / +amountOnPage)\n        : amount,\n    );\n    setCurrPage(1);\n  }, [category]);\n\n  useEffect(() => {\n    setPageAmount(\n      !Number.isNaN(+amountOnPage)\n        ? Math.ceil(amount / +amountOnPage)\n        : amount,\n    );\n  }, []);\n\n  const preparedItems = useMemo(() => {\n    separatedByCategory.sort((a, b) => {\n      switch (sortType) {\n        case SortTypes.Low:\n          return (a.price - ((100 - a.discount) / 100))\n            - (b.price - ((100 - b.discount) / 100));\n        case SortTypes.High:\n          return (b.price - ((100 - b.discount) / 100))\n            - (a.price - ((100 - a.discount) / 100));\n        default:\n          return a.age - b.age;\n      }\n    });\n\n    return separatedByCategory;\n  }, [sortType, items, category]);\n\n  const clicedItems = () => {\n    if (typeof amountOnPage === 'number') {\n      return preparedItems.slice(\n        (currPage - 1) * amountOnPage,\n        currPage * amountOnPage,\n      );\n    }\n\n    return preparedItems;\n  };\n\n  const changeItemAmountHandle = (newAmount: number | string) => {\n    setCurrPage(1);\n    if (!Number.isNaN(+newAmount)) {\n      setAmountOnPage(+newAmount);\n      setPageAmount(Math.ceil(amount / +newAmount));\n    } else {\n      setAmountOnPage(newAmount);\n      setPageAmount(1);\n    }\n  };\n\n  const changeSortTypeHandle = (newSortType: SortTypes) => {\n    setSortType(newSortType);\n  };\n\n  const changePagehandle = (action: string | number) => {\n    if (typeof action === 'string') {\n      switch (action) {\n        case 'next':\n          setCurrPage(curr => curr + 1);\n          break;\n        case 'prev':\n          if (currPage > 1) {\n            setCurrPage(curr => curr - 1);\n          }\n\n          break;\n        default:\n          break;\n      }\n    } else {\n      setCurrPage(action);\n    }\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <section className=\"categoryPage\">\n      <Path pathElems={[category]} pathBoldElems={[]} />\n      <h1 className=\"categoryPage__title\">\n        {category[0].toUpperCase() + category.slice(1)}\n      </h1>\n\n      <p className=\"categoryPage__amount\">\n        {`${amount} models`}\n      </p>\n\n      <div className=\"categoryPage__sort-prop\">\n        <div className=\"categoryPage__sortType\">\n          <p className=\"categoryPage__sort-text\">Sort by</p>\n          <select\n            className=\"categoryPage__sortSelect categoryPage__sortType-type\"\n            name=\"sortType\"\n            id=\"sortType\"\n            defaultValue={amountOnPage}\n            onChange={(event) => changeSortTypeHandle(+event.target.value)}\n          >\n            <option value={SortTypes.Newest}>Newest</option>\n            <option value={SortTypes.Low}>Price:Low to High</option>\n            <option value={SortTypes.High}>Price: Hight to Low</option>\n          </select>\n        </div>\n\n        <div className=\"categoryPage__sortAmount\">\n          <p className=\"categoryPage__sort-text\">Items on Page</p>\n          <select\n            className=\"categoryPage__sortSelect categoryPage__sortType-amount\"\n            name=\"amountOnPage\"\n            id=\"AmountOnPage\"\n            defaultValue={amountOnPage}\n            onChange={(event) => {\n              changeItemAmountHandle(event.target.value);\n            }}\n          >\n            {amountOnPageValues.map(value => (\n              <option\n                value={value}\n                key={value}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"categoryPage__body\">\n        {clicedItems().map(item => <Item item={item} key={item.id} />)}\n      </div>\n      {pageAmount > 1 && (\n        <div className=\"categoryPage__selector\">\n          <button\n            type=\"button\"\n            aria-label=\"prev\"\n            className=\"categoryPage__button categoryPage__button--reversed\"\n            onClick={() => changePagehandle('prev')}\n          />\n\n          {new Array(pageAmount).fill(0).map((_, index) => (\n            <button\n              // eslint-disable-next-line react/no-array-index-key\n              key={`button_${index}`}\n              type=\"button\"\n              aria-label=\"page\"\n              className={classNames(\n                'categoryPage__unit',\n                { 'categoryPage__unit--active': currPage === index + 1 },\n              )}\n              onClick={() => changePagehandle(index + 1)}\n            >\n              {index + 1}\n            </button>\n          ))}\n\n          <button\n            type=\"button\"\n            aria-label=\"next\"\n            className=\"categoryPage__button\"\n            onClick={() => changePagehandle('next')}\n          />\n        </div>\n      )}\n    </section>\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\nexport interface FavoriteState {\n  favorites: string[]\n}\nconst favouriteLocalStorageKey = 'favourite';\n\nconst getFavouritesFromLocalStorage = (key: string):string[] => {\n  const item = localStorage.getItem(key);\n\n  if (item) {\n    return JSON.parse(item);\n  }\n\n  return [];\n};\n\nconst writeFavouritesToLocalStorage = (\n  key:string,\n  itemId: string | string[],\n) => {\n  const item = getFavouritesFromLocalStorage(key);\n\n  if (typeof itemId === 'string') {\n    item.push(itemId);\n  } else {\n    itemId.forEach(id => item.push(id));\n  }\n\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nconst deleteFavouritesFromLocalStorage = (key:string, itemId: string) => {\n  const item = getFavouritesFromLocalStorage(key);\n\n  localStorage.setItem(key, JSON.stringify(item.filter(id => id !== itemId)));\n};\n\nconst initialState: FavoriteState = {\n  favorites: getFavouritesFromLocalStorage(favouriteLocalStorageKey),\n};\n\nexport const favouriteSlice = createSlice({\n  name: 'favorite',\n  initialState,\n  reducers: {\n    addFavourite: (state, action: PayloadAction<string>) => {\n      writeFavouritesToLocalStorage(favouriteLocalStorageKey, action.payload);\n      state.favorites = [...state.favorites, action.payload];\n    },\n    removeFavourite: (state, action: PayloadAction<string>) => {\n      deleteFavouritesFromLocalStorage(\n        favouriteLocalStorageKey, action.payload,\n      );\n      state.favorites = state.favorites.filter(id => id !== action.payload);\n    },\n  },\n});\n\nexport const { addFavourite, removeFavourite } = favouriteSlice.actions;\nexport default favouriteSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Phone } from '../types/Phone';\n\ninterface WithdrawPhone extends Phone {\n  amount: number,\n}\n\ninterface Withdraw {\n  [key: string]: WithdrawPhone,\n}\n\nexport interface WithdrawState {\n  withdraw: Withdraw,\n}\nconst withdrawLocalStorageKey = 'withdraw';\n\nconst getWithdrawFromLocalStorage = (): Withdraw => {\n  const item = localStorage.getItem(withdrawLocalStorageKey);\n\n  if (item) {\n    return JSON.parse(item);\n  }\n\n  return {};\n};\n\nconst saveWithdrawToLocalStorage = (state: Withdraw) => {\n  localStorage.setItem(withdrawLocalStorageKey, JSON.stringify(state));\n};\n\nconst initialState: WithdrawState = {\n  withdraw: getWithdrawFromLocalStorage(),\n};\n\nexport const withdrawSlice = createSlice({\n  name: withdrawLocalStorageKey,\n  initialState,\n  reducers: {\n    addWithdraw: (state, action: PayloadAction<Phone>) => {\n      const hasProperty = Object.prototype.hasOwnProperty.call(\n        getWithdrawFromLocalStorage(),\n        action.payload.id,\n      );\n\n      if (!hasProperty) {\n        state.withdraw = {\n          ...state.withdraw,\n          [action.payload.id]: { ...action.payload, amount: 1 },\n        };\n      }\n\n      saveWithdrawToLocalStorage(state.withdraw);\n    },\n    encreaseAmount: (state, action: PayloadAction<[number, string]>) => {\n      const hasProperty = Object.prototype.hasOwnProperty.call(\n        getWithdrawFromLocalStorage(),\n        action.payload[1],\n      );\n\n      if (hasProperty) {\n        state.withdraw[action.payload[1]].amount += action.payload[0];\n        saveWithdrawToLocalStorage(state.withdraw);\n      }\n    },\n    decreaseAmount: (state, action: PayloadAction<[number, string]>) => {\n      const hasProperty = Object.prototype.hasOwnProperty.call(\n        getWithdrawFromLocalStorage(),\n        action.payload[1],\n      );\n\n      if (hasProperty\n        && state.withdraw[action.payload[1]].amount - action.payload[0] > 0) {\n        state.withdraw[action.payload[1]].amount -= action.payload[0];\n        saveWithdrawToLocalStorage(state.withdraw);\n      }\n    },\n    deleteWithdraw: (state, action: PayloadAction<string>) => {\n      delete state.withdraw[action.payload];\n      saveWithdrawToLocalStorage(state.withdraw);\n    },\n  },\n});\n\nexport const {\n  addWithdraw,\n  decreaseAmount,\n  deleteWithdraw,\n  encreaseAmount,\n} = withdrawSlice.actions;\nexport default withdrawSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport favouriteReducer from '../features/favouriteSlice';\nimport withdrawReducer from '../features/withdrawSlice';\n\nexport const store = configureStore({\n  reducer: {\n    favorite: favouriteReducer,\n    withdraw: withdrawReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\nimport '../../styles/Nav.scss';\nimport classNames from 'classnames';\nimport { useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\n\nexport const Header: React.FC = () => {\n  const favoritesSize = useAppSelector((state: RootState) => (\n    state.favorite.favorites)).length;\n  const withdraw = useAppSelector((state: RootState) => (\n    state.withdraw.withdraw));\n\n  const withdrawSize = useMemo(() => {\n    let counter = 0;\n\n    Object.keys(withdraw).forEach(e => {\n      counter += withdraw[e].amount;\n    });\n\n    return counter;\n  }, [withdraw]);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__content\">\n        <div className=\"header__right\">\n          <div className=\"logo\">\n            <NavLink\n              to=\"/home\"\n              className=\"logo__link\"\n            >\n            </NavLink>\n          </div>\n\n          <nav className=\"nav\">\n            <ul className=\"nav__list\">\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/home\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Home\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/phones\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Phones\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/tablets\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Tablets\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/accessories\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Accessories\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <div className=\"header__left\">\n          <NavLink\n            to=\"/favourites\"\n            className={({ isActive }) => classNames(\n              'header__icon header__icon-favourite',\n              { 'is-active': isActive },\n            )}\n          >\n            {favoritesSize > 0\n            && (\n              <p className=\"header__ellipse\">\n                {favoritesSize}\n              </p>\n            )}\n          </NavLink>\n          <NavLink\n            to=\"/withdraw\"\n            className={({ isActive }) => classNames(\n              'header__icon header__icon-withdraw',\n              { 'is-active': isActive },\n            )}\n          >\n            {withdrawSize > 0\n              && (\n                <p className=\"header__ellipse\">\n                  {withdrawSize}\n                </p>\n              )}\n          </NavLink>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport './Footer.scss';\nimport '../../styles/Nav.scss';\nimport { NavLink } from 'react-router-dom';\n\nexport const Footer:React.FC = () => {\n  const toTopHandle = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"container footer__content\">\n        <div className=\"footer__logo\">\n          <NavLink to=\"/\" className=\"footer__link\">\n          </NavLink>\n        </div>\n        <div className=\"footer__contacts\">\n          <nav className=\"nav\">\n            <ul className=\"nav__list\">\n              <li className=\"nav__item\">\n                <NavLink to=\"/\" className=\"nav__link\">\n                  Github\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink to=\"/\" className=\"nav__link\">\n                  Contacts\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink to=\"/\" className=\"nav__link\">\n                  Rights\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"footer__to-top\"\n          onClick={() => toTopHandle()}\n        >\n          <h3 className=\"footer__to-top-text\">\n            Back to top\n          </h3>\n          <div\n            className=\"footer__to-top-button\"\n          />\n        </button>\n      </div>\n    </footer>\n  );\n};\n","export const BASE_URL = 'https://mate-academy.github.io/react_phone-catalog';\n// eslint-disable-next-line max-len\nconst mainLink = 'https://mate-academy.github.io/react_phone-catalog/api/products';\n\nexport const getPhones = () => {\n  return fetch(`${mainLink}.json`).then(responce => {\n    if (!responce.ok) {\n      throw new Error();\n    }\n\n    return responce.json();\n  });\n};\n\nexport const getCurrPhone = (phoneId: string) => {\n  return fetch(`${mainLink}/${phoneId}.json`).then(responce => {\n    if (!responce.ok) {\n      throw new Error();\n    }\n\n    return responce.json();\n  });\n};\n","import './Item.scss';\nimport { Link } from 'react-router-dom';\nimport React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Phone } from '../../types/Phone';\nimport { addFavourite, removeFavourite } from '../../features/favouriteSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { addWithdraw, deleteWithdraw } from '../../features/withdrawSlice';\nimport { BASE_URL } from '../../utils/api';\n\ntype Props = {\n  item: Phone,\n};\n\nexport const Item: React.FC<Props> = ({\n  item,\n}) => {\n  const favourites = useAppSelector((state: RootState) => (\n    state.favorite.favorites));\n  const withdraw = useAppSelector((state: RootState) => (\n    state.withdraw.withdraw));\n\n  const dispatch = useAppDispatch();\n\n  const isWithdraw = useMemo(() => {\n    return Object.keys(withdraw).includes(item.id);\n  }, [withdraw]);\n\n  const isFavorite = useMemo(() => {\n    return favourites.includes(item.id);\n  }, [favourites]);\n\n  const buttonHandle = (place: string) => {\n    if (place === 'favorite') {\n      if (isFavorite) {\n        dispatch(removeFavourite(item.id));\n      } else {\n        dispatch(addFavourite(item.id));\n      }\n    } else if (place === 'withdraw') {\n      if (isWithdraw) {\n        dispatch(deleteWithdraw(item.id));\n      } else {\n        dispatch(addWithdraw(item));\n      }\n    }\n  };\n\n  return (\n    <div\n      className=\"item\"\n    >\n      <Link\n        className=\"item__header\"\n        to={`/${item.type}s/${item.id}`}\n      >\n        <div className=\"item__photo-container\">\n          <img\n            src={`${BASE_URL}/${item.imageUrl}`}\n            alt={item.id}\n            className=\"item__photo\"\n          />\n        </div>\n\n        <h2 className=\"item__title\">\n          {item.name}\n        </h2>\n      </Link>\n\n      <div className=\"item__body\">\n        <div className=\"item__price\">\n          {item.discount\n            ? (\n              <>\n                <p className=\"item__counted\">\n                  {Math.ceil(item.price * ((100 - item.discount) / 100))}\n                </p>\n\n                <p className=\"item__initial-price\">\n                  {item.price}\n                </p>\n              </>\n            )\n            : (\n              <p className=\"item__counted\">\n                {item.price}\n              </p>\n            )}\n        </div>\n\n        <div className=\"item__specs specs\">\n          <ul className=\"item__specs specs__list\">\n            <li className=\"specs__item\">\n              <p className=\"specs__name\">\n                Screen\n              </p>\n              <p className=\"specs__value\">\n                {item.screen}\n              </p>\n            </li>\n            <li className=\"specs__item\">\n              <p className=\"specs__name\">\n                Capacity\n              </p>\n              <p className=\"specs__value\">\n                {item.capacity}\n              </p>\n            </li>\n            <li className=\"specs__item\">\n              <p className=\"specs__name\">\n                RAM\n              </p>\n              <p className=\"specs__value\">\n                {item.ram}\n              </p>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"item__buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'item__buy',\n              { 'item__buy--selected': isWithdraw },\n            )}\n            onClick={() => buttonHandle('withdraw')}\n          >\n            {isWithdraw ? 'Added to cart' : 'Add to cart'}\n          </button>\n\n          <button\n            type=\"button\"\n            aria-label=\"favorite\"\n            className={classNames(\n              'item__favorite',\n              { 'item__favorite--active': isFavorite },\n            )}\n            onClick={() => buttonHandle('favorite')}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport React, { useMemo } from 'react';\nimport classNames from 'classnames';\n\nimport './Path.scss';\n\ntype Props = {\n  pathElems: string[],\n  pathBoldElems: string[],\n};\n\nexport const Path: React.FC<Props> = ({ pathElems, pathBoldElems }) => {\n  const prepPathElems = useMemo(() => pathElems.map(elem => (\n    elem[0].toUpperCase() + elem.slice(1))), [pathElems]);\n  const prepPathBoldElems = useMemo(() => pathBoldElems.map(elem => (\n    elem[0].toUpperCase() + elem.slice(1))), [pathBoldElems]);\n\n  return (\n    <div className=\"path\">\n      <Link\n        to=\"/home\"\n        className=\"path__link\"\n      />\n      <div className=\"path__arrow\" />\n      {prepPathElems.map((elem, index, arr) => {\n        if (arr.length - 1 > index) {\n          return (\n            <React.Fragment key={elem}>\n              <Link\n                to={`/${elem}`}\n                className={classNames(\n                  'path__text',\n                  { path__bold: prepPathBoldElems.includes(elem) },\n                )}\n                key={elem}\n              >\n                {elem}\n              </Link>\n              <div className=\"path__arrow\" />\n            </React.Fragment>\n          );\n        }\n\n        return (\n          <p\n            className={classNames(\n              'path__text',\n              { path__bold: pathBoldElems.includes(elem) },\n            )}\n            key={elem}\n          >\n            {elem}\n          </p>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { Phone } from '../../types/Phone';\nimport { getPhones } from '../../utils/api';\nimport { Item } from '../../components/Item';\nimport { Path } from '../../components/Path';\nimport './Favourites.scss';\n\nexport const Favourites: React.FC = () => {\n  const [favItems, setFavItems] = useState<Phone[]>([]);\n\n  const title = () => {\n    const paths = window.location.hash.slice(2);\n\n    return paths[0].toUpperCase() + paths.slice(1);\n  };\n\n  const favourites = useAppSelector((state: RootState) => (\n    state.favorite.favorites\n  ));\n\n  useEffect(() => {\n    getPhones().then((phones: Phone[]) => {\n      favourites.forEach(item => {\n        const currPhone = phones.find(phone => phone.id === item);\n\n        if (currPhone) {\n          setFavItems((curr) => [...curr, currPhone]);\n        }\n      });\n    });\n  }, [favourites]);\n\n  return (\n    <section className=\"favourites\">\n      <Path pathElems={[title()]} pathBoldElems={[]} />\n      <h1 className=\"favourites__title\">\n        {title()}\n      </h1>\n\n      <h3 className=\"favourites__subtitle\">\n        {`${favourites.length} items`}\n      </h3>\n\n      <div className=\"favourites__body\">\n        {favItems.map(item => <Item item={item} key={item.id} />)}\n      </div>\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { Path } from '../../components/Path';\nimport './Withdraw.scss';\nimport '../../styles/grid.scss';\nimport {\n  decreaseAmount,\n  deleteWithdraw,\n  encreaseAmount,\n} from '../../features/withdrawSlice';\nimport { BASE_URL } from '../../utils/api';\n\nexport const Withdraw: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const withdraws = useAppSelector((state: RootState) => (\n    state.withdraw.withdraw\n  ));\n\n  const title = () => {\n    const paths = window.location.hash.slice(2);\n\n    return paths[0].toUpperCase() + paths.slice(1);\n  };\n\n  const totalPrice = useMemo(() => (\n    Object.values(withdraws).reduce((prev, curr) => (\n      prev + Math.ceil(\n        curr.amount * curr.price * ((100 - curr.discount) / 100),\n      )), 0)\n  ), [withdraws]);\n\n  const deleteItemHandle = (id: string) => {\n    dispatch(deleteWithdraw(id));\n  };\n\n  const amountActionHandle = (type: string, id: string) => {\n    if (type === 'add') {\n      dispatch(encreaseAmount([1, id]));\n    } else if (type === 'remove') {\n      dispatch(decreaseAmount([1, id]));\n    }\n  };\n\n  return (\n    <section className=\"withdraw\">\n      <Path pathElems={[title()]} pathBoldElems={[]} />\n      <h1 className=\"withdraw__title\">\n        Cart\n      </h1>\n      <div className=\"grid\">\n        <div className=\"grid__item grid__item-1-16\">\n          <ul>\n            {Object.values(withdraws).map(item => (\n              <li className=\"withdraw__item\" key={item.id}>\n                <div className=\"withdraw__item-info\">\n                  <button\n                    type=\"button\"\n                    aria-label=\"delete\"\n                    className=\"withdraw__cross\"\n                    onClick={() => deleteItemHandle(item.id)}\n                  />\n\n                  <img\n                    src={`${BASE_URL}/${item.imageUrl}`}\n                    alt={item.id}\n                    className=\"withdraw__img\"\n                  />\n\n                  <p className=\"withdraw__text\">{item.name}</p>\n                </div>\n\n                <div className=\"withdraw__item-price\">\n                  <div className=\"withdraw__counter\">\n                    <button\n                      type=\"button\"\n                      className={classNames(\n                        'withdraw__itembtn',\n                        { 'withdraw__itembtn--active': item.amount > 1 },\n                      )}\n                      onClick={() => amountActionHandle('remove', item.id)}\n                    >\n                      -\n                    </button>\n\n                    <div className=\"withdraw__container\">\n                      <p className=\"withdraw__amount\">{item.amount}</p>\n                    </div>\n\n                    <button\n                      type=\"button\"\n                      className=\"withdraw__itembtn withdraw__itembtn--active\"\n                      onClick={() => amountActionHandle('add', item.id)}\n                    >\n                      +\n                    </button>\n                  </div>\n                  <p className=\"withdraw__price\">\n                    {`$${Math.ceil(item.amount * item.price * ((100 - item.discount) / 100))}`}\n                  </p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"grid__item grid__item-17-24 withdraw__checkout\">\n          <p className=\"withdraw__total-price\">\n            {`$${totalPrice}`}\n          </p>\n          <p className=\"withdraw__inner-text\">{`Total for ${Object.keys(withdraws).length} items`}</p>\n          <button\n            type=\"button\"\n            className=\"withdraw__button\"\n          >\n            Checkout\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useMemo, useState } from 'react';\nimport { Phone } from '../../types/Phone';\nimport { Item } from '../Item/Item';\n\nimport './ItemCarousel.scss';\n\ntype Props = {\n  title: string,\n  items: Phone[],\n};\n\nexport const ItemCarousel: React.FC<Props> = ({\n  title,\n  items,\n}) => {\n  const [currPage, setCurrPage] = useState(0);\n  const step = 272 * 4 + 17 * 4;\n\n  const pageAmount = useMemo(() => (items\n    ? Math.ceil(items.length / 4)\n    : 0),\n  [items]);\n\n  const actionHandler = (mode: string) => {\n    if (mode === 'next' && currPage < pageAmount - 1) {\n      setCurrPage(curr => curr + 1);\n    } else if (mode === 'prev' && currPage > 0) {\n      setCurrPage(curr => curr - 1);\n    }\n  };\n\n  return (\n    <div className=\"itemCarousel\">\n      <div className=\"itemCarousel__header\">\n        <h2 className=\"itemCarousel__title\">\n          {title}\n        </h2>\n\n        <div className=\"itemCarousel__buttons\">\n          <button\n            disabled={currPage === 0}\n            aria-label=\"prev\"\n            className={classNames(\n              'itemCarousel__button',\n              'itemCarousel__button--reversed',\n              { 'itemCarousel__button--disabled': currPage === 0 },\n            )}\n            type=\"button\"\n            onClick={() => actionHandler('prev')}\n          />\n\n          <button\n            disabled={currPage === pageAmount - 1}\n            aria-label=\"next\"\n            className={classNames(\n              'itemCarousel__button',\n              { 'itemCarousel__button--disabled': currPage === pageAmount - 1 },\n            )}\n            type=\"button\"\n            onClick={() => actionHandler('next')}\n          />\n\n        </div>\n      </div>\n\n      <div className=\"itemCarousel__body\">\n        <div\n          className=\"itemCarousel__wrapper\"\n          style={{ transform: `translateX(${-currPage * step}px)` }}\n        >\n          {items?.map(phone => (\n            <Item\n              item={phone}\n              key={phone.id}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { addFavourite, removeFavourite } from '../../features/favouriteSlice';\nimport { addWithdraw, deleteWithdraw } from '../../features/withdrawSlice';\nimport { ItemDetails } from '../../types/ItemDetails';\nimport { Phone } from '../../types/Phone';\nimport { BASE_URL, getCurrPhone, getPhones } from '../../utils/api';\nimport { ItemCarousel } from '../../components/ItemCarousel';\nimport { Path } from '../../components/Path';\n\nimport './ItemPage.scss';\n\ntype ActiveImgId = {\n  prevVal: number,\n  currVal: number,\n};\n\nconst colors = ['#FCDBC1', '#5F7170', '#4C4C4C', '#F0F0F0'];\nconst capacity = [64, 256, 512];\n\nexport const ItemPage: React.FC = () => {\n  const [currPhoneAllSpecs, setCurrPhoneAllSpecs] = useState<ItemDetails>();\n  const [currPhone, setCurrPhone] = useState<Phone>();\n  const [currColor, setCurrColor] = useState(colors[0]);\n  const [currCapacity, setCurrCapacity] = useState(capacity[0]);\n  const [activeImgId, setActiveImgId] = useState<ActiveImgId>({\n    prevVal: 0,\n    currVal: 0,\n  });\n  const [similarPhones, setSimilarPhones] = useState<Phone[]>([]);\n\n  const pathParts = window.location.hash.slice(2).split('/');\n\n  const dispatch = useAppDispatch();\n\n  const favourites = useAppSelector((state: RootState) => (\n    state.favorite.favorites\n  ));\n\n  const withdraw = useAppSelector((state: RootState) => (\n    state.withdraw.withdraw));\n\n  const isWithdraw = useMemo(() => {\n    return currPhone ? Object.keys(withdraw).includes(currPhone.id) : false;\n  }, [withdraw, currPhone]);\n\n  const isFavorite = useMemo(() => {\n    return currPhone ? favourites.includes(currPhone.id) : false;\n  }, [favourites, currPhone]);\n\n  const buttonHandle = (place: string) => {\n    if (currPhone) {\n      if (place === 'favorite') {\n        if (isFavorite) {\n          dispatch(removeFavourite(currPhone.id));\n        } else {\n          dispatch(addFavourite(currPhone.id));\n        }\n      } else if (place === 'withdraw') {\n        if (isWithdraw) {\n          dispatch(deleteWithdraw(currPhone.id));\n        } else {\n          dispatch(addWithdraw(currPhone));\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    getCurrPhone(pathParts[1]).then(phone => setCurrPhoneAllSpecs(phone));\n    getPhones().then(phones => {\n      setCurrPhone(phones.find((phone: Phone) => phone.id === pathParts[1]));\n      setSimilarPhones(phones.slice(5, 10));\n    });\n  }, []);\n\n  const clickOnImgHandle = (id: number) => {\n    setActiveImgId({\n      prevVal: id,\n      currVal: id,\n    });\n  };\n\n  const onMouseEnterHandle = (id: number) => {\n    setActiveImgId(curr => ({\n      ...curr,\n      currVal: id,\n    }));\n  };\n\n  const onMouseLeaveHandle = () => {\n    setActiveImgId(curr => ({\n      ...curr,\n      currVal: curr.prevVal,\n    }));\n  };\n\n  const changeColorHandle = (color: string) => {\n    setCurrColor(color);\n  };\n\n  const changeCapacityHandle = (value: number) => {\n    setCurrCapacity(value);\n  };\n\n  return (\n    <section className=\"itemPage\">\n      {currPhoneAllSpecs && currPhone && (\n        <>\n          <Path pathElems={pathParts} pathBoldElems={pathParts.slice(0, -1)} />\n          <Link\n            to={`/${pathParts[0]}`}\n            className=\"itemPage__back\"\n          >\n            <div className=\"itemPage__back-img\" />\n            Back\n          </Link>\n\n          <h1 className=\"itemPage__title\">\n            {currPhoneAllSpecs.name}\n          </h1>\n\n          <div className=\"grid itemPage__section\">\n            <div className=\"grid__item grid__item-1-2 itemPage__photos\">\n              {currPhoneAllSpecs.images.map((img, id) => (\n                <img\n                  src={`${BASE_URL}/${img}`}\n                  className={classNames(\n                    'itemPage__secondaryPhoto',\n                    {\n                      'itemPage__secondaryPhoto--active':\n                        id === activeImgId.currVal,\n                    },\n                  )}\n                  alt=\"photos\"\n                  key={img}\n                  onClick={() => clickOnImgHandle(id)}\n                  onMouseEnter={() => onMouseEnterHandle(id)}\n                  onMouseLeave={() => onMouseLeaveHandle()}\n                />\n              ))}\n            </div>\n\n            <div className=\"\n              grid__item\n              grid__item-3-12\n              itemPage__activePhotoContainer\"\n            >\n              <img\n                className=\"itemPage__activePhoto\"\n                src={currPhoneAllSpecs.images[activeImgId.currVal]}\n                alt=\"selected\"\n              />\n            </div>\n\n            <div className=\"grid__item grid__item-14-21 itemPage__main-specs\">\n              <div className=\"itemPage__colors\">\n                <p className=\"itemPage__colors-text\">\n                  Available colors\n                </p>\n                {colors.map(color => (\n                  <div\n                    className={classNames(\n                      'itemPage__colors-wrapper',\n                      {\n                        'itemPage__colors-wrapper--active':\n                          color === currColor,\n                      },\n                    )}\n                    key={color}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"itemPage__colors-btn\"\n                      aria-label=\"color\"\n                      style={{ backgroundColor: color }}\n                      onClick={() => changeColorHandle(color)}\n                    />\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"itemPage__capacity\">\n                <p className=\"itemPage__capacity-text\">\n                  Select capacity\n                </p>\n                {capacity.map(value => (\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'itemPage__capacity-value',\n                      {\n                        'itemPage__capacity-value--active':\n                          value === currCapacity,\n                      },\n                    )}\n                    aria-label=\"color\"\n                    key={value}\n                    onClick={() => changeCapacityHandle(value)}\n                  >\n                    {`${value} GB`}\n                  </button>\n                ))}\n              </div>\n\n              <div className=\"itemPage__price\">\n                <p className=\"itemPage__price-current\">\n                  {`$${Math.ceil(currPhone.price\n                    * ((100 - currPhone.discount) / 100))}`}\n                </p>\n                {currPhone.discount > 0 && (\n                  <p className=\"itemPage__price-original\">\n                    {`$${currPhone.price}`}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"itemPage__buttons\">\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'itemPage__buttons-buy',\n                    { 'itemPage__buttons-buy--selected': isWithdraw },\n                  )}\n                  onClick={() => buttonHandle('withdraw')}\n                >\n                  {isWithdraw ? 'Added to cart' : 'Add to cart'}\n                </button>\n                <button\n                  aria-label=\"favourite\"\n                  type=\"button\"\n                  className={classNames(\n                    'itemPage__buttons-favourite',\n                    { 'itemPage__buttons-favourite--active': isFavorite },\n                  )}\n                  onClick={() => buttonHandle('favorite')}\n                />\n              </div>\n\n              <ul className=\"itemPage__specs-list\">\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Screen\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.display.screenSize}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Resolution\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.display.screenResolution}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Processor\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.hardware.cpu}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    RAM\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.storage.ram}\n                  </p>\n                </li>\n              </ul>\n            </div>\n\n            <div className=\"grid__item grid__item-23-24\">\n              <p className=\"itemPage__id\">\n                {`ID:${currPhoneAllSpecs.id}`}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"grid itemPage__section\">\n            <div className=\"grid__item grid__item-1-12 itemPage__about\">\n              <p className=\"itemPage__about-title\">\n                About\n              </p>\n\n              <p className=\"itemPage__about-text\">\n                {currPhoneAllSpecs.description}\n              </p>\n            </div>\n\n            <div className=\"grid__item grid__item-14-24 itemPage__specs\">\n              <p className=\"itemPage__specs-title\">\n                Tech specs\n              </p>\n\n              <ul className=\"itemPage__specs-list\">\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Screen\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.display.screenSize}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Resolution\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.display.screenResolution}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Processor\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.hardware.cpu}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    RAM\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.storage.ram}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Built in memory\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {`${currCapacity} GB`}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Camera\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.camera.primary}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    Ceil\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.connectivity.cell}\n                  </p>\n                </li>\n\n                <li className=\"itemPage__specs-item\">\n                  <p className=\"itemPage__specs-item-title\">\n                    OS\n                  </p>\n                  <p className=\"itemPage__specs-item-value\">\n                    {currPhoneAllSpecs.android.os}\n                  </p>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"itemPage__similarPhones\">\n            <ItemCarousel\n              title=\"Hot prices\"\n              items={similarPhones}\n            />\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Category.scss';\n\nexport const Category: React.FC = () => {\n  return (\n    <section className=\"category\">\n      <h2 className=\"category__title\">\n        Shop by category\n      </h2>\n\n      <ul className=\"category__list\">\n        <li className=\"category__item\">\n          <Link to=\"/phones\">\n            <div\n              className=\"category__photo--phones category__photo\"\n            />\n            <h2 className=\"category__name\">Mobile phones</h2>\n            <p className=\"category__amount\">amount</p>\n          </Link>\n        </li>\n        <li className=\"category__item\">\n          <Link to=\"/tablets\">\n            <div\n              className=\"category__photo--tablets category__photo\"\n            />\n            <h2 className=\"category__name\">Tabets</h2>\n            <p className=\"category__amount\">amount</p>\n          </Link>\n        </li>\n        <li className=\"category__item\">\n          <Link to=\"accessories\">\n            <div\n              className=\"category__photo--accessories category__photo\"\n            />\n            <h2 className=\"category__name\">Accessories</h2>\n            <p className=\"category__amount\">amount</p>\n          </Link>\n        </li>\n      </ul>\n    </section>\n  );\n};\n","import './HotPrice.scss';\nimport React, { useMemo } from 'react';\nimport { Phone } from '../../types/Phone';\nimport { ItemCarousel } from '../ItemCarousel';\n\ntype Props = {\n  products: Phone[],\n};\n\nexport const HotPrice: React.FC<Props> = ({\n  products,\n}) => {\n  const hotPhones = useMemo(() => {\n    const phonesSorted = products.sort((phone1, phone2) => (\n      phone2.discount - phone1.discount));\n\n    return (phonesSorted.filter(phone => phone.discount > 0));\n  },\n  [products]);\n\n  return (\n    <section className=\"hotPrice\">\n      {hotPhones\n        && (\n          <ItemCarousel\n            title=\"Hot prices\"\n            items={hotPhones}\n          />\n        )}\n    </section>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Phone } from '../../types/Phone';\nimport { ItemCarousel } from '../ItemCarousel';\n\nimport './NewModels.scss';\n\ntype Props = {\n  products: Phone[],\n};\n\nexport const NewModels: React.FC<Props> = ({\n  products,\n}) => {\n  const newPhones = useMemo(() => {\n    const preparedPhones = products.filter(phone => phone.age < 10);\n\n    return preparedPhones.sort((phone1, phone2) => phone1.age - phone2.age);\n  },\n  [products]);\n\n  return (\n    <section className=\"newModels\">\n      {newPhones\n        && (\n          <ItemCarousel\n            title=\"Brand new models\"\n            items={newPhones}\n          />\n        )}\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Img } from '../../types/Img';\nimport './Carousel.scss';\n\ntype Props = {\n  imgs: Img[]\n};\n\nexport const Carousel:React.FC<Props> = ({ imgs }) => {\n  const containerRef = useRef<HTMLUListElement>(null);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const intervalRef = useRef<any>(null);\n  const [current, setCurrent] = useState(1);\n  const [translateX, setTranslateX] = useState(0);\n\n  const slides = useMemo(() => {\n    if (imgs.length > 1) {\n      const items = imgs.map((img) => (\n        <li key={img.id} className=\"carousel__slide\">\n          <img src={img.img} alt={img.desc} />\n        </li>\n      ));\n\n      return [\n        <li key={imgs[0].id - 1} className=\"carousel__slide\">\n          <img\n            src={`${imgs[imgs.length - 1].img}`}\n            alt={imgs[imgs.length - 1].desc}\n          />\n        </li>,\n        ...items,\n        <li key={imgs[imgs.length - 1].id + 1} className=\"carousel__slide\">\n          <img src={`${imgs[0].img}`} alt={imgs[0].desc} />\n        </li>,\n      ];\n    }\n\n    return (\n      <li className=\"carousel__slide\">\n        {imgs[0]}\n      </li>\n    );\n  }, [imgs]);\n\n  const actionHandler = useCallback((mode: string) => {\n    if (containerRef.current) {\n      containerRef.current.style.transitionDuration = '400ms';\n\n      if (mode === 'prev') {\n        if (current <= 1) {\n          setTranslateX(0);\n          setCurrent(imgs.length);\n        } else {\n          setTranslateX(containerRef.current.clientWidth * (current - 1));\n          setCurrent((prev) => prev - 1);\n        }\n      } else if (mode === 'next') {\n        if (current >= imgs.length) {\n          setTranslateX(containerRef.current.clientWidth * (imgs.length + 1));\n          setCurrent(1);\n        } else {\n          setTranslateX(containerRef.current.clientWidth * (current + 1));\n          setCurrent((prev) => prev + 1);\n        }\n      }\n    }\n  }, [current, imgs]);\n\n  useEffect(() => {\n    const transitionEnd = () => {\n      if (containerRef.current) {\n        if (current <= 1) {\n          containerRef.current.style.transitionDuration = '0ms';\n          setTranslateX(containerRef.current.clientWidth * current);\n        }\n\n        if (current >= imgs.length) {\n          containerRef.current.style.transitionDuration = '0ms';\n          setTranslateX(containerRef.current.clientWidth * imgs.length);\n        }\n      }\n    };\n\n    document.addEventListener('transitionend', transitionEnd);\n\n    return () => {\n      document.removeEventListener('transitionend', transitionEnd);\n    };\n  }, [current, imgs]);\n\n  useLayoutEffect(() => {\n    if (containerRef.current) {\n      setTranslateX(containerRef.current.clientWidth * current);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n\n    intervalRef.current = setInterval(() => {\n      actionHandler('next');\n    }, 5000);\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [actionHandler]);\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"carousel__body\">\n        <button\n          type=\"button\"\n          aria-label=\"prev\"\n          className=\"carousel__button\"\n          onClick={() => actionHandler('prev')}\n        />\n\n        <div className=\"carousel__wrapper\">\n          <ul\n            ref={containerRef}\n            className=\"carousel__container\"\n            style={\n              { transform: `translate3d(${-translateX}px, 0, 0)` }\n            }\n          >\n            {slides}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          aria-label=\"next\"\n          className=\"carousel__button carousel__button--reversed\"\n          onClick={() => actionHandler('next')}\n        />\n      </div>\n\n      <div className=\"carousel__info\">\n        {imgs.map((_, index) => (\n          <div\n            key={Math.random()}\n            className={classNames(\n              'carousel__info-tile',\n              { 'carousel__active-tile': index + 1 === current },\n            )}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/Banner.8e14917d.png\";","import './Novelties.scss';\nimport React from 'react';\nimport { Carousel } from '../Carousel';\nimport { Img } from '../../types/Img';\nimport carouselImg from '../../img/Banner.png';\n\nexport const Novelties: React.FC = () => {\n  const imgs:Img[] = [\n    {\n      id: 1,\n      img: carouselImg,\n      desc: 'photo 1',\n    },\n    {\n      id: 2,\n      img: carouselImg,\n      desc: 'photo 1',\n    },\n    {\n      id: 3,\n      img: carouselImg,\n      desc: 'photo 1',\n    },\n  ];\n\n  return (\n    <section className=\"novelties\">\n      <Carousel imgs={imgs} />\n    </section>\n  );\n};\n","import React from 'react';\nimport { Category } from '../../components/Category';\nimport { HotPrice } from '../../components/HotPrice';\nimport { NewModels } from '../../components/NewModels';\nimport { Novelties } from '../../components/Novelties';\nimport { Phone } from '../../types/Phone';\n\ntype Props = {\n  products: Phone[]\n};\n\nexport const HomePage: React.FC<Props> = ({ products }) => {\n  return (\n    <>\n      <Novelties />\n      {products && (\n        <>\n          <HotPrice\n            products={products}\n          />\n          <Category />\n          <NewModels\n            products={products}\n          />\n        </>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { getPhones } from './utils/api';\nimport { Phone } from './types/Phone';\nimport { Favourites } from './pages/Favourites';\n\nimport './App.scss';\nimport { Withdraw } from './pages/Withdraw';\nimport { ItemPage } from './pages/ItemPage';\nimport { CategoryPage } from './pages/CategoryPage';\nimport { HomePage } from './pages/HomePage';\n\nconst App = () => {\n  const [products, setProducts] = useState<Phone[]>();\n\n  useEffect(() => {\n    getPhones().then((phones: Phone[]) => setProducts(phones));\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <div className=\"container\">\n          <Routes>\n            {products && (\n              <>\n                <Route path=\"/\" element={<Navigate to=\"/home\" replace />} />\n\n                <Route\n                  path=\"/home\"\n                  element={<HomePage products={products} />}\n                />\n\n                <Route path=\"/phones\">\n                  <Route\n                    index\n                    element={\n                      <CategoryPage items={products} category=\"phone\" />\n                    }\n                  />\n                  <Route path=\":itemId\" element={<ItemPage />} />\n                </Route>\n\n                <Route path=\"/tablets\">\n                  <Route\n                    index\n                    element={\n                      <CategoryPage items={products} category=\"tablet\" />\n                    }\n                  />\n                  <Route path=\":itemId\" element={<ItemPage />} />\n                </Route>\n\n                <Route path=\"/accessories\">\n                  <Route\n                    index\n                    element={\n                      <CategoryPage items={products} category=\"accessories\" />\n                    }\n                  />\n                  <Route path=\":itemId\" element={<ItemPage />} />\n                </Route>\n              </>\n            )}\n\n            <Route\n              path=\"/favourites\"\n              element={<Favourites />}\n            />\n\n            <Route\n              path=\"/withdraw\"\n              element={<Withdraw />}\n            />\n\n            <Route path=\"*\" element={<p>Page not found</p>} />\n\n          </Routes>\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { store } from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}